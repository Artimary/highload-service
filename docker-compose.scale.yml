version: "3"

services:
  # API Instance 1
  api:
    build:
      context: ./ParkingApi/src
      dockerfile: Dockerfile
    image: highload-github-api
    container_name: api-1
    command: dotnet ParkingApi.dll
    ports:
      - "8000:8000"
    depends_on:
      - postgresql
      - influxdb
      - redis
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=super-secret-token
      - INFLUXDB_ORG=iot_org
      - INFLUXDB_BUCKET=iot_bucket
      - POSTGRES_HOST=postgresql
      - POSTGRES_PORT=5432
      - POSTGRES_DB=parking
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
      - ASPNETCORE_URLS=http://+:8000
      - INSTANCE_ID=api-1
      - ConnectionStrings__Redis=redis:6379,password=${REDIS_PASSWORD:-complex-password},abortConnect=false
    networks:
      - iot-network
    deploy:
      resources:
        limits:
          cpus: "${API_CPU_LIMIT:-1}"
          memory: "${API_MEMORY_LIMIT:-1G}"
        reservations:
          cpus: "${API_CPU_RESERVATION:-0.5}"
          memory: "${API_MEMORY_RESERVATION:-512M}"

  # API Instance 2
  api-2:
    build:
      context: ./ParkingApi/src
      dockerfile: Dockerfile
    image: highload-github-api
    restart: unless-stopped
    container_name: api-2
    command: dotnet ParkingApi.dll
    ports:
      - "8002:8000"
    depends_on:
      - postgresql
      - influxdb
      - redis
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=super-secret-token
      - INFLUXDB_ORG=iot_org
      - INFLUXDB_BUCKET=iot_bucket
      - POSTGRES_HOST=postgresql
      - POSTGRES_PORT=5432
      - POSTGRES_DB=parking
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
      - ASPNETCORE_URLS=http://+:8000
      - INSTANCE_ID=api-2
      - ConnectionStrings__Redis=redis:6379,password=${REDIS_PASSWORD:-complex-password},abortConnect=false
    networks:
      - iot-network
    deploy:
      resources:
        limits:
          cpus: "${API_CPU_LIMIT:-1}"
          memory: "${API_MEMORY_LIMIT:-1G}"
        reservations:
          cpus: "${API_CPU_RESERVATION:-0.5}"
          memory: "${API_MEMORY_RESERVATION:-512M}"

  # API Instance 3
  api-3:
    build:
      context: ./ParkingApi/src
      dockerfile: Dockerfile
    image: highload-github-api
    restart: unless-stopped
    container_name: api-3
    command: dotnet ParkingApi.dll
    ports:
      - "8003:8000"
    depends_on:
      - postgresql
      - influxdb
      - redis
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=super-secret-token
      - INFLUXDB_ORG=iot_org
      - INFLUXDB_BUCKET=iot_bucket
      - POSTGRES_HOST=postgresql
      - POSTGRES_PORT=5432
      - POSTGRES_DB=parking
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
      - ASPNETCORE_URLS=http://+:8000
      - INSTANCE_ID=api-3
      - ConnectionStrings__Redis=redis:6379,password=${REDIS_PASSWORD:-complex-password},abortConnect=false
    networks:
      - iot-network
    deploy:
      resources:
        limits:
          cpus: "${API_CPU_LIMIT:-1}"
          memory: "${API_MEMORY_LIMIT:-1G}"
        reservations:
          cpus: "${API_CPU_RESERVATION:-0.5}"
          memory: "${API_MEMORY_RESERVATION:-512M}"

  # Nginx Load Balancer
  nginx:
    image: nginx:latest
    container_name: nginx-lb
    ports:
      - "80:80"
    volumes:
      - ./nginx/${NGINX_CONFIG:-round-robin.conf}:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
      - api-2
      - api-3
    networks:
      - iot-network

  # InfluxDB
  influxdb:
    container_name: influxdb
    image: influxdb
    ports:
      - "8086:8086"
    volumes:
      - ./influxdb/data:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123
      - DOCKER_INFLUXDB_INIT_ORG=iot_org
      - DOCKER_INFLUXDB_INIT_BUCKET=iot_bucket
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=super-secret-token
    networks:
      - iot-network

  # PostgreSQL Database
  postgresql:
    image: postgres:latest
    container_name: postgresql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: parking
      MAX_CONNECTIONS: ${PG_MAX_CONNECTIONS:-200}
      SHARED_BUFFERS: ${PG_SHARED_BUFFERS:-256MB}
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - iot-network
    deploy:
      resources:
        limits:
          cpus: "${DB_CPU_LIMIT:-2}"
          memory: "${DB_MEMORY_LIMIT:-2G}"
        reservations:
          cpus: "${DB_CPU_RESERVATION:-1}"
          memory: "${DB_MEMORY_RESERVATION:-1G}"

  # Tsung Load Testing Tool
  tsung:
    build:
      context: ./tsung
      dockerfile: Dockerfile
    container_name: tsung
    volumes:
      - ./tsung/scenarios:/tsung/scenarios
      - ./tsung/scripts:/tsung/scripts
      - ./tsung/config:/tsung/config
      - ./tsung/results:/tsung/results
    depends_on:
      - nginx
      - postgresql
      - influxdb
    networks:
      - iot-network
    profiles:
      - testing
    environment:
      - API_HOST=nginx
      - API_PORT=80
    command: tail -f /dev/null

  redis:
    image: redis:7-alpine
    container_name: redis-cache
    command: redis-server --requirepass ${REDIS_PASSWORD:-complex-password} --maxmemory ${REDIS_MAXMEMORY:-512mb} --maxmemory-policy ${REDIS_MAXMEMORY_POLICY:-allkeys-lru}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - iot-network
    healthcheck:
      test:
        [
          "CMD",
          "redis-cli",
          "-a",
          "${REDIS_PASSWORD:-complex-password}",
          "ping",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "${REDIS_CPU_LIMIT:-1}"
          memory: "${REDIS_MEMORY_LIMIT:-1G}"
        reservations:
          cpus: "${REDIS_CPU_RESERVATION:-0.5}"
          memory: "${REDIS_MEMORY_RESERVATION:-512M}"

networks:
  iot-network:
    driver: bridge

volumes:
  redis-data:
