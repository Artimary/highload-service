apiVersion: 1

groups:
  - orgId: 1
    name: "Parking API Critical Alerts"
    folder: "alerts"
    interval: "1m"
    rules:
      - uid: "parking_api_high_error_rate"
        title: "High API Error Rate"
        condition: "C"
        data:
          - refId: "A"
            queryType: ""
            relativeTimeRange:
              from: 300
              to: 0
            datasource:
              type: "influxdb"
              uid: "${INFLUXDB_UID}"
            model:
              query: 'from(bucket:"iot_bucket") |> range(start: -5m) |> filter(fn: (r) => r._measurement == "http_requests") |> filter(fn: (r) => r.status_code >= "400") |> count()'
              refId: "A"
          - refId: "B"
            queryType: ""
            relativeTimeRange:
              from: 300
              to: 0
            datasource:
              type: "influxdb"
              uid: "${INFLUXDB_UID}"
            model:
              query: 'from(bucket:"iot_bucket") |> range(start: -5m) |> filter(fn: (r) => r._measurement == "http_requests") |> count()'
              refId: "B"
          - refId: "C"
            queryType: ""
            relativeTimeRange:
              from: 300
              to: 0
            datasource:
              type: "__expr__"
              uid: "__expr__"
            model:
              conditions:
                - evaluator:
                    params: [0.1]
                    type: "gt"
                  operator:
                    type: "and"
                  query:
                    params: ["C"]
                  reducer:
                    params: []
                    type: "last"
                  type: "query"
              datasource:
                type: "__expr__"
                uid: "__expr__"
              expression: "A / B"
              hide: false
              intervalMs: 1000
              maxDataPoints: 43200
              refId: "C"
              type: "math"
        noDataState: "NoData"
        execErrState: "Alerting"
        for: "1m"
        annotations:
          summary: "High error rate detected in Parking API"
          description: "API error rate is above 10% for the last 5 minutes. Current rate: {{ $value }}%"
        labels:
          severity: "critical"
          service: "parking-api"

      - uid: "parking_api_high_response_time"
        title: "High API Response Time"
        condition: "A"
        data:
          - refId: "A"
            queryType: ""
            relativeTimeRange:
              from: 300
              to: 0
            datasource:
              type: "influxdb"
              uid: "${INFLUXDB_UID}"
            model:
              query: 'from(bucket:"iot_bucket") |> range(start: -5m) |> filter(fn: (r) => r._measurement == "http_requests") |> filter(fn: (r) => r._field == "response_time_ms") |> mean()'
              refId: "A"
        noDataState: "NoData"
        execErrState: "Alerting"
        for: "2m"
        annotations:
          summary: "High response time detected in Parking API"
          description: "Average API response time is above 500ms for the last 5 minutes. Current average: {{ $value }}ms"
        labels:
          severity: "warning"
          service: "parking-api"

      - uid: "parking_occupancy_critical"
        title: "Critical Parking Occupancy"
        condition: "A"
        data:
          - refId: "A"
            queryType: ""
            relativeTimeRange:
              from: 300
              to: 0
            datasource:
              type: "influxdb"
              uid: "${INFLUXDB_UID}"
            model:
              query: 'from(bucket:"iot_bucket") |> range(start: -5m) |> filter(fn: (r) => r._measurement == "parking_business_metrics") |> filter(fn: (r) => r._field == "occupancy_rate") |> last()'
              refId: "A"
        noDataState: "NoData"
        execErrState: "Alerting"
        for: "1m"
        annotations:
          summary: "Critical parking occupancy detected"
          description: "Parking occupancy rate is above 95%. Current rate: {{ $value }}%"
        labels:
          severity: "critical"
          service: "parking-system"

      - uid: "influxdb_query_performance_degraded"
        title: "InfluxDB Query Performance Degraded"
        condition: "A"
        data:
          - refId: "A"
            queryType: ""
            relativeTimeRange:
              from: 600
              to: 0
            datasource:
              type: "influxdb"
              uid: "${INFLUXDB_UID}"
            model:
              query: 'from(bucket:"iot_bucket") |> range(start: -10m) |> filter(fn: (r) => r._measurement == "influxdb_query_performance") |> filter(fn: (r) => r._field == "duration_ms") |> mean()'
              refId: "A"
        noDataState: "NoData"
        execErrState: "Alerting"
        for: "5m"
        annotations:
          summary: "InfluxDB query performance degraded"
          description: "Average InfluxDB query time is above 1000ms for the last 10 minutes. Current average: {{ $value }}ms"
        labels:
          severity: "warning"
          service: "influxdb"

      - uid: "no_parking_data_received"
        title: "No Parking Data Received"
        condition: "A"
        data:
          - refId: "A"
            queryType: ""
            relativeTimeRange:
              from: 900
              to: 0
            datasource:
              type: "influxdb"
              uid: "${INFLUXDB_UID}"
            model:
              query: 'from(bucket:"iot_bucket") |> range(start: -15m) |> filter(fn: (r) => r._measurement == "parking_data") |> count()'
              refId: "A"
        noDataState: "Alerting"
        execErrState: "Alerting"
        for: "5m"
        annotations:
          summary: "No parking data received from IoT devices"
          description: "No parking data has been received from IoT devices in the last 15 minutes. This may indicate a connectivity issue."
        labels:
          severity: "critical"
          service: "iot-system"
